{"version":3,"sources":["utils/function.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findSelectedTab","id","arr","find","tab","Tab","Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","classNames","href","onClick","handleClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8KAEO,SAASA,EAAgBC,EAAYC,GAC1C,OAAOA,EAAIC,MAAK,SAAAC,GAAG,OAAIA,EAAIH,KAAOA,MAAOC,EAAI,G,OAG/C,EAAeG,I,8BCIFC,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcV,EAAgBQ,EAAeD,GAQnD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAR,GAAG,OACX,oBACE,UAAQ,MAERO,UAAWE,IAAW,GACpB,CAAE,YAAaH,EAAYT,KAAOG,EAAIH,KAJ1C,SAME,mBACE,UAAQ,UACRa,KAAI,WAAMV,EAAIH,IACdc,QAAS,kBApBH,SAACX,GACfI,IAAkBJ,EAAIH,IACxBQ,EAAcL,GAkBWY,CAAYZ,IAH7B,SAKGA,EAAIa,SATFb,EAAIH,WAgBjB,qBAAKU,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYQ,cCxCRX,G,YAAO,CAClB,CAAEN,GAAI,QAASgB,MAAO,QAASC,QAAS,eACxC,CAAEjB,GAAI,QAASgB,MAAO,QAASC,QAAS,eACxC,CAAEjB,GAAI,QAASgB,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASb,EAAK,GAAGN,IAA3D,mBAAOO,EAAP,KAAsBa,EAAtB,KAIA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBX,EAAgBQ,EAAeD,GAAMU,SAE3D,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAVgB,SAACL,GAAD,OAAciB,EAAiBjB,EAAIH,WCb3DqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d9377866.chunk.js","sourcesContent":["import Tab from '../types/Tab';\n\nexport function findSelectedTab(id: string, arr: Tab[]): Tab {\n  return arr.find(tab => tab.id === id) || arr[0];\n}\n\nexport default Tab;\n","import classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport Tab, { findSelectedTab } from '../../utils/function';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string;\n  onTabSelected: CallableFunction;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = findSelectedTab(selectedTabId, tabs);\n\n  const handleClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames('',\n                { 'is-active': selectedTab.id === tab.id })}\n            >\n              <a\n                data-cy=\"TabLink\"\n                href={`#${tab.id}`}\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport Tab, { findSelectedTab } from './utils/function';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${findSelectedTab(selectedTabId, tabs).title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}